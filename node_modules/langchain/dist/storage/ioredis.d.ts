/// <reference types="node" resolution-mode="require"/>
import type { Redis } from "ioredis";
import { BaseStore } from "../schema/storage.js";
export declare class RedisByteStore extends BaseStore<string, Uint8Array> {
    lc_namespace: string[];
    protected client: Redis;
    protected ttl?: number;
    protected namespace?: string;
    protected yieldKeysScanBatchSize: number;
    constructor(fields: {
        client: Redis;
        ttl?: number;
        namespace?: string;
        yieldKeysScanBatchSize?: number;
    });
    _getPrefixedKey(key: string): string;
    _getDeprefixedKey(key: string): string;
    mget(keys: string[]): Promise<(Buffer | undefined)[]>;
    mset(keyValuePairs: [string, Uint8Array][]): Promise<void>;
    mdelete(keys: string[]): Promise<void>;
    yieldKeys(prefix?: string): AsyncGenerator<string>;
}
